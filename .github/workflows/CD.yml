name: CD
on:
  push:
    branches:
      - main

permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v4.7.1
        with:
          java-version: 21
          distribution: "oracle"

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      #배포를 위한 prod properties 설정
      - name: Make application.properties
        run: |
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION }}" > ./application.properties
        shell: bash
        
      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew

      - name: Build With Gradle
        run: ./gradlew build -x test

      - name: Docker build & Push
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/flog .
          docker push ${{ secrets.DOCKER_REPO }}/flog

      - name: Deploy Images with Docker compose
        uses: appleboy/ssh-action@master
        env:
          APP: "flog"
          COMPOSE: "/home/ubuntu/compose/docker-compose.yml"
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.AWSFLOG }}
          envs: APP, COMPOSE
          script_stop: true
          script: |
            sudo docker-compose -f $COMPOSE down
            sudo docker pull ${{ secrets.DOCKER_REPO }}/flog
            sudo docker-compose -f $COMPOSE up -d
